Задача 3. Марсоход-2
К роботу Валли планируют отправить «коллегу» Билли. Это первая высадка Билли на Марс, поэтому его тестируют в прямоугольном помещении размером 15 × 20 м. Марсоход высаживается в центре комнаты (в точке 8, 10), затем управление им передаётся оператору, то есть пользователю вашей программы.

Программа спрашивает, в какую сторону оператор хочет направить робота: север (клавиша W), юг (клавиша S), запад (клавиша A) или восток (клавиша D). Оператор делает выбор, марсоход перемещается в эту сторону на один метр, а программа сообщает новую позицию робота. Если марсоход упёрся в стену, он не должен пытаться переместиться в сторону стены — в этом случае его позиция не меняется.

Что нужно сделать
Создайте программу для управления роботом Билли.

Пример

[Программа]: Марсоход находится на позиции 6, 19, введите команду:
[Оператор]: A
[Программа]: Марсоход находится на позиции 5, 19, введите команду:
[Оператор]: W
[Программа]: Марсоход находится на позиции 5, 20, введите команду:
[Оператор]: W
[Программа]: Марсоход находится на позиции 5, 20, введите команду:

Рекомендации по выполнению
Обращайте внимание на границы.
Попробуйте изменять положение марсохода только после проверки координат.
Ввод команд происходит только в верхнем регистре, учитывать нижний не нужно.
Старайтесь максимально уменьшать количество дублирований кода. Если действие выполняется независимо от условий, не стоит дублировать его в каждом условии.
Что оценивается
Результат вывода соответствует условию.
Формат вывода соответствует примеру.
Марсоход не двигается, если достигает границы участка.

Решение:

position_a = 8
position_b = 10

while True:
    print('[Программа]: Марсоход находится на позиции', end=' ')
    print(position_a, ',', position_b, ',', end=' ')
    position = input('введите команду:')

    if position == 'A':
        position_a -= 1
    elif position == 'D':
        position_a += 1
    elif position == 'W':
        position_b += 1
    elif position == 'S':
        position_b -= 1

    if position_a < 0:
        position_a = 0
    elif position_a > 15:
        position_a = 15

    if position_b < 0:
        position_b = 0
    elif position_b > 20:
        position_b = 20

